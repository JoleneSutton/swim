[{"path":"https://jolenesutton.github.io/swim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 swim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Figure 2","text":"vignette replicates Figure 2 [].","code":"library(swim) library(ggplot2) library(terra) library(tidyterra)"},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"assign-events-to-spatial-grid-cells-","dir":"Articles","previous_headings":"","what":"Assign events to spatial grid cells.","title":"Figure 2","text":"example data file sampling.weights contains column spatial grid cell identities column sampling weights according distance buffers. Use function sw_sample assign 10,000 events spatial grid cells. Compare outputs three options.","code":"head(sampling.weights) #>   OBJECTID weight #> 1   255891      1 #> 2   256996      1 #> 3   256997      1 #> 4   256999      1 #> 5   258104      1 #> 6   258105      1 set.seed(12345)  len=10000  x1<-sw_sample(len,sampling.weights,option=1)#Option 1 = based on weighted random sampling #> Returning grid cell identities resulting from weighted random sampling  x2<-sw_sample(len,sampling.weights,option=2)#Option 2 = distribute over ALL grid cells according to weight #> Returning data frame of the sampling weight, the number of associated spatial grid cells, and the number of events per grid cell  x3<-sw_sample(len,sampling.weights,option=3)#Option 3 = distribute over ALL grid cells evenly #> Returning data frame of number grid cells and the number of events per grid cell head(x1) #> [1] 351939 347278 332847 273856 335121 268184  x2 #>   weight cells n.per.cell #> 1      0  2394 0.00000000 #> 2   0.01  1903 0.04530052 #> 3   0.15  3172 0.40766187 #> 4      1  4553 1.89340867  x3 #>   cells n.per.cell #> 1 12022  0.8318084"},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"get-example-shapefiles-for-plotting","dir":"Articles","previous_headings":"","what":"Get example shapefiles for plotting","title":"Figure 2","text":"","code":"shapes<-sw_internal_shapefiles('all') str(shapes) #> List of 5 #>  $ naf4t       :S4 class 'SpatVector' [package \"terra\"] #>  $ spatial.grid:S4 class 'SpatVector' [package \"terra\"] #>  $ buffer10    :S4 class 'SpatVector' [package \"terra\"] #>  $ buffer30    :S4 class 'SpatVector' [package \"terra\"] #>  $ buffer50    :S4 class 'SpatVector' [package \"terra\"]  for(i in 3:5){   shapes[[i]]<-crop(shapes[[i]],shapes[[1]]) }"},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"plot-1","dir":"Articles","previous_headings":"","what":"Plot 1","title":"Figure 2","text":"","code":"#tally per hex x1b<-cbind.data.frame(table(x1)) names(x1b)<-c('OBJECTID','count') #use same grid cell identity column header as shapefile head(x1b) #>   OBJECTID count #> 1   256996     3 #> 2   256997     2 #> 3   256999     2 #> 4   258104     3 #> 5   258105     3 #> 6   258106     2  grid.1b<-merge(shapes[[2]],x1b)  (pl1<-ggplot()+     geom_spatvector(data=shapes[[1]],fill='white')+     geom_spatvector(data=grid.1b,aes(fill=count),col=NA)+     geom_spatvector(data=shapes[[3]],fill=NA,col='black',linewidth=0.5,linetype=4)+     geom_spatvector(data=shapes[[4]],fill=NA,col='black',linewidth=0.5,linetype=3)+     geom_spatvector(data=shapes[[5]],fill=NA,col='black',linewidth=0.5,linetype=2)+     scale_fill_viridis_c(name='Events',option='viridis',direction=-1,                          limits=c(0.01,8.05),                          begin = 0,end = 0.95)+     geom_spatvector(data=shapes[[1]],fill=NA))"},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"plot-2","dir":"Articles","previous_headings":"","what":"Plot 2","title":"Figure 2","text":"","code":"names(x2)[3]<-'count' grid.2<-merge(shapes[[2]],x2) grid.2<-grid.2[which(grid.2$count>0),] label2<-rev(round(unique(grid.2$count),2))  (pl2<-ggplot()+     geom_spatvector(data=shapes[[1]],fill='white')+     geom_spatvector(data=grid.2,aes(fill=factor(count)),col=NA)+     scale_fill_viridis_d(name='Events',option='viridis',direction=-1,                          labels=label2,                          begin = 0,end = 0.95)+     guides(fill = guide_legend(reverse = TRUE))+     geom_spatvector(data=shapes[[3]],fill=NA,col='black',linewidth=0.5,linetype=4)+     geom_spatvector(data=shapes[[4]],fill=NA,col='black',linewidth=0.5,linetype=3)+     geom_spatvector(data=shapes[[5]],fill=NA,col='black',linewidth=0.5,linetype=2)+     geom_spatvector(data=shapes[[1]],fill=NA))"},{"path":"https://jolenesutton.github.io/swim/articles/figure2.html","id":"plot-3","dir":"Articles","previous_headings":"","what":"Plot 3","title":"Figure 2","text":"","code":"x3 #>   cells n.per.cell #> 1 12022  0.8318084 grid.3<-shapes[[2]] grid.3$count<-x3[,2]  label3<-round(unique(grid.3$count),2)  (pl3<-ggplot()+     geom_spatvector(data=grid.3,aes(fill=factor(count)),col=NA)+     scale_fill_viridis_d(name='Events',option='viridis',direction=-1,                          begin = 0,end = 0.95,                          label=label3)+     geom_spatvector(data=shapes[[1]],fill=NA))"},{"path":[]},{"path":"https://jolenesutton.github.io/swim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jolene T. Sutton. Author, maintainer. Jenni L. McDermid. Author. Stephanie Ratelle. Author.","code":""},{"path":"https://jolenesutton.github.io/swim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sutton JT, McDermid J, Ratelle S (2025). swim: Spatial Weight Informed Mapping. R package version 0.0.0.9000, https://github.com/JoleneSutton/swim.","code":"@Manual{,   title = {swim: Spatial Weight Informed Mapping},   author = {Jolene T. Sutton and Jenni L. McDermid and Stephanie Ratelle},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/JoleneSutton/swim}, }"},{"path":"https://jolenesutton.github.io/swim/index.html","id":"swim-","dir":"","previous_headings":"","what":"Spatial Weight Informed Mapping","title":"Spatial Weight Informed Mapping","text":"Functions Spatial Weight Informed Mapping (swim), enables integration data incongruent sources generate heterogeneous layer sampling weights. Events missing geographic coordinates assigned spatial grid using probability-based framework informed sampling weights (.e., sampling probabilities proportional assigned weights).","code":""},{"path":"https://jolenesutton.github.io/swim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial Weight Informed Mapping","text":"can install swim :","code":"# install.packages(\"devtools\") devtools::install_github(\"JoleneSutton/swim\")"},{"path":"https://jolenesutton.github.io/swim/reference/sampling.weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set — sampling.weights","title":"Example data set — sampling.weights","text":"Example data set","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sampling.weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set — sampling.weights","text":"","code":"sampling.weights"},{"path":"https://jolenesutton.github.io/swim/reference/sampling.weights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set — sampling.weights","text":"data frame 12,022 rows 2 variables: OBJECTID Spatial grid cell identifier weight Spatial grid cell sampling weight","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sw_internal_shapefiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the example shapefiles — sw_internal_shapefiles","title":"Get the example shapefiles — sw_internal_shapefiles","text":"Imports stored shapefile SpatVector (terra).","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sw_internal_shapefiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the example shapefiles — sw_internal_shapefiles","text":"","code":"sw_internal_shapefiles(x)"},{"path":"https://jolenesutton.github.io/swim/reference/sw_internal_shapefiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the example shapefiles — sw_internal_shapefiles","text":"x option return ","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sw_internal_shapefiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the example shapefiles — sw_internal_shapefiles","text":"Returns list SpatVectors x<-sw_internal_shapefiles('') x","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sw_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Swim Sample — sw_sample","title":"Swim Sample — sw_sample","text":"Sample spatial grid cells distribute events according grid cell sample weights","code":""},{"path":"https://jolenesutton.github.io/swim/reference/sw_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swim Sample — sw_sample","text":"","code":"sw_sample(length, wghts, option = 1)"},{"path":"https://jolenesutton.github.io/swim/reference/sw_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swim Sample — sw_sample","text":"length number events wghts Data frame two columns. first column identity grid cell. second column associated sampling weight. choosing option=3, column sampling weights ignored. option Either 1, 2, 3. Default 1. Option 1 uses weighted random assignment distribute events grid cells. option returns grid cell identities. Option 2 distributes events grid cells proportionally according sampling weights. Option 3 distributes events evenly available grid cells, ignoring sampling weights.","code":""}]
